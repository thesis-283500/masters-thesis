---
# Source: spire/charts/spire-agent/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: "spire-server-agent"
  namespace: "spire-server"
  labels:
    helm.sh/chart: "spire-agent-0.1.0"
    app.kubernetes.io/name: "agent"
    app.kubernetes.io/instance: "spire-server"
    app.kubernetes.io/version: "1.12.2"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/component: "default"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: "agent"
      app.kubernetes.io/instance: "spire-server"
      app.kubernetes.io/component: "default"
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: spire-agent
        checksum/config: "89d360455f7a066059dfe93c8603bb310465508b966f79b1c93c0bf45e4c5d07"
      labels:
        app.kubernetes.io/name: "agent"
        app.kubernetes.io/instance: "spire-server"
        app.kubernetes.io/component: "default"
    spec:
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: "spire-server-agent"
      securityContext:
        {}
      
      initContainers:
        - name: ensure-alternate-names
          image: "cgr.dev/chainguard/bash:latest@sha256:57ed0cb7b67f52ea7678128da5c4cf99c1a71d269db92a6a40c179fa57f00ce4"
          imagePullPolicy: "Always"
          command: ["bash", "-xc"]
          args:
            - |
              cd /run/spire/agent-sockets
              L=`readlink socket`
              [ "x$L" != "xspire-agent.sock" ] && rm -f socket
              [ ! -L socket ] && ln -s spire-agent.sock socket
              L=`readlink api.sock`
              [ "x$L" != "xspire-agent.sock" ] && rm -f api.sock
              [ ! -L api.sock ] && ln -s spire-agent.sock api.sock
              [ -L spire-agent.sock ] && rm -f spire-agent.sock
              exit 0
          resources:
            {}
          volumeMounts:
            - name: spire-agent-socket-dir
              mountPath: /run/spire/agent-sockets
          securityContext:
            runAsUser: 0
            runAsGroup: 0
      containers:
        - name: "spire-agent"
          image: "ghcr.io/spiffe/spire-agent:1.12.2"
          imagePullPolicy: "IfNotPresent"
          args: ["-config", "/opt/spire/conf/agent/agent.conf"]
          securityContext:
            {}
          env:
            - name: PATH
              value: "/opt/spire/bin:/bin"
          ports:
            - containerPort: 9982
              name: healthz
          volumeMounts:
            - name: spire-config
              mountPath: /opt/spire/conf/agent
              readOnly: true
            - name: spire-agent-persistence
              mountPath: /var/lib/spire
            - name: spire-bundle
              readOnly: true
              mountPath: /run/spire/bundle
            - name: spire-agent-socket-dir
              mountPath: /tmp/spire-agent/public
              readOnly: false
            - name: spire-token
              mountPath: /var/run/secrets/tokens
          livenessProbe:
            httpGet:
              path: /live
              port: healthz
            initialDelaySeconds: 15
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /ready
              port: healthz
            initialDelaySeconds: 10
            periodSeconds: 30
          resources:
            {}
      volumes:
        - name: spire-config
          configMap:
            name: spire-server-agent
        - name: spire-agent-admin-socket-dir
          emptyDir: {}
        - name: spire-agent-persistence
          emptyDir: {}
        - name: spire-bundle
          configMap:
            name: "spire-bundle"
        - name: spire-token
          projected:
            sources:
            - serviceAccountToken:
                path: spire-agent
                expirationSeconds: 7200
                audience: spire-server
        - name: spire-agent-socket-dir
          hostPath:
            path: /run/spire/agent-sockets
            type: DirectoryOrCreate