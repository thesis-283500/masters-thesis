---
# Source: spire/charts/spire-server/templates/server-resource.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: spire-server
  namespace: spire-server
  labels:
    helm.sh/chart: spire-server-0.1.0
    app.kubernetes.io/name: server
    app.kubernetes.io/instance: spire-server
    app.kubernetes.io/version: "1.12.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: server
spec:
  replicas: 1
  serviceName: spire-server
  selector:
    matchLabels:
      app.kubernetes.io/name: server
      app.kubernetes.io/instance: spire-server
      app.kubernetes.io/component: server
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: spire-server
        checksum/config: 0b540962003fa645c0befb6fcec3af9ce5b2a0e3114af195fba290fc28378144
        checksum/config2: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/config3: 74ce0523d590d23a560c904ec31e78ef69b69e11b92a666093979f2cf4e623a7
        checksum/configTornjak: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/name: server
        app.kubernetes.io/instance: spire-server
        app.kubernetes.io/component: server
        component: server
        release: spire-server
        release-namespace: spire-server
    spec:
      serviceAccountName: spire-server
      shareProcessNamespace: true
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
      
      initContainers:
        - name: chown
          image: "cgr.dev/chainguard/bash:latest"
          imagePullPolicy: Always
          command: ["bash", "-c"]
          args:
            - |
              chown -R 1000:1000 /var/lib/spire
          resources:
            {}
          volumeMounts:
            - name: spire-data
              mountPath: /var/lib/spire
          securityContext:
            runAsUser: 0
            runAsGroup: 0
      containers:
        - name: spire-server
          securityContext:
            {}
          image: "ghcr.io/spiffe/spire-server:1.12.2"
          imagePullPolicy: IfNotPresent
          args:
            - -expandEnv
            - -config
            - /run/spire/config/server.conf
          env:
          - name: PATH
            value: "/opt/spire/bin:/bin"
          ports:
            - name: grpc
              containerPort: 8081
              protocol: TCP
            - containerPort: 8080
              name: healthz
          livenessProbe:
            httpGet:
              path: /live
              port: healthz
            failureThreshold: 2
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: healthz
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {}
          volumeMounts:
            - name: spire-server-socket
              mountPath: /tmp/spire-server/private
              readOnly: false
            - name: spire-config
              mountPath: /run/spire/config
              readOnly: true
            - name: spire-data
              mountPath: /run/spire/data
              readOnly: false
            - name: server-tmp
              mountPath: /tmp
              readOnly: false
        
        - name: spire-controller-manager
          securityContext:
            {}
          image: "ghcr.io/spiffe/spire-controller-manager:0.6.2"
          imagePullPolicy: IfNotPresent
          args:
            - --config=controller-manager-config.yaml
          env:
            - name: ENABLE_WEBHOOKS
              value: "true"
          ports:
            - name: https
              containerPort: 9443
              protocol: TCP
            - containerPort: 8083
              name: healthz
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
          readinessProbe:
            httpGet:
              path: /readyz
              port: healthz
          resources:
            {}
          volumeMounts:
            - name: spire-server-socket
              mountPath: /tmp/spire-server/private
              readOnly: true
            - name: controller-manager-config
              mountPath: /controller-manager-config.yaml
              subPath: controller-manager-config.yaml
              readOnly: true
            - name: spire-controller-manager-tmp
              mountPath: /tmp
              subPath: spire-controller-manager
              readOnly: false
      volumes:
        - name: server-tmp
          emptyDir: {}
        - name: spire-config
          configMap:
            name: spire-server
        - name: spire-server-socket
          emptyDir: {}
        - name: spire-controller-manager-tmp
          emptyDir: {}
        - name: controller-manager-config
          configMap:
            name: spire-controller-manager
  volumeClaimTemplates:
    - metadata:
        name: spire-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi